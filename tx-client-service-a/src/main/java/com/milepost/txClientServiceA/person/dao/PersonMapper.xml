<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.milepost.txClientServiceA.person.dao.PersonMapper" >
  <resultMap id="BaseResultMap" type="com.milepost.exampleApi.entity.person.Person" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="FIRST_NAME" property="firstName" jdbcType="VARCHAR" />
    <result column="LAST_NAME" property="lastName" jdbcType="VARCHAR" />
    <result column="BIRTH" property="birth" jdbcType="TIMESTAMP" />
    <result column="SCORE" property="score" jdbcType="REAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.milepost.exampleApi.entity.person.Person" extends="BaseResultMap" >
    <result column="REMARK" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, FIRST_NAME, LAST_NAME, BIRTH, SCORE
  </sql>
  <sql id="Blob_Column_List" >
    REMARK
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.milepost.exampleApi.entity.person.PersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.milepost.exampleApi.entity.person.PersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from person
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from person
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.milepost.exampleApi.entity.person.PersonExample" >
    delete from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.milepost.exampleApi.entity.person.Person" >
    insert into person (ID, FIRST_NAME, LAST_NAME,
    BIRTH, SCORE, REMARK
    )
    values (#{id,jdbcType=VARCHAR}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR},
    #{birth,jdbcType=TIMESTAMP}, #{score,jdbcType=REAL}, #{remark,jdbcType=LONGVARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.milepost.exampleApi.entity.person.Person" >
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="firstName != null" >
        FIRST_NAME,
      </if>
      <if test="lastName != null" >
        LAST_NAME,
      </if>
      <if test="birth != null" >
        BIRTH,
      </if>
      <if test="score != null" >
        SCORE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null" >
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null" >
        #{score,jdbcType=REAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.milepost.exampleApi.entity.person.PersonExample" resultType="java.lang.Integer" >
    select count(*) from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update person
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.firstName != null" >
        FIRST_NAME = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastName != null" >
        LAST_NAME = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.birth != null" >
        BIRTH = #{record.birth,jdbcType=TIMESTAMP},
      </if>
      <if test="record.score != null" >
        SCORE = #{record.score,jdbcType=REAL},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update person
    set ID = #{record.id,jdbcType=VARCHAR},
    FIRST_NAME = #{record.firstName,jdbcType=VARCHAR},
    LAST_NAME = #{record.lastName,jdbcType=VARCHAR},
    BIRTH = #{record.birth,jdbcType=TIMESTAMP},
    SCORE = #{record.score,jdbcType=REAL},
    REMARK = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update person
    set ID = #{record.id,jdbcType=VARCHAR},
    FIRST_NAME = #{record.firstName,jdbcType=VARCHAR},
    LAST_NAME = #{record.lastName,jdbcType=VARCHAR},
    BIRTH = #{record.birth,jdbcType=TIMESTAMP},
    SCORE = #{record.score,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.milepost.exampleApi.entity.person.Person" >
    update person
    <set >
      <if test="firstName != null" >
        FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        LAST_NAME = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        BIRTH = #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null" >
        SCORE = #{score,jdbcType=REAL},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.milepost.exampleApi.entity.person.Person" >
    update person
    set FIRST_NAME = #{firstName,jdbcType=VARCHAR},
    LAST_NAME = #{lastName,jdbcType=VARCHAR},
    BIRTH = #{birth,jdbcType=TIMESTAMP},
    SCORE = #{score,jdbcType=REAL},
    REMARK = #{remark,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.milepost.exampleApi.entity.person.Person" >
    update person
    set FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      LAST_NAME = #{lastName,jdbcType=VARCHAR},
      BIRTH = #{birth,jdbcType=TIMESTAMP},
      SCORE = #{score,jdbcType=REAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <cache type="org.mybatis.caches.ehcache.EhcacheCache" />
</mapper>