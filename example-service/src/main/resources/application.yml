info:
  app:
    name: 业务系统例子服务Service
    description: 用来做相关例子的
    version: 1.0.0.100

server:
  port: 9981
  servlet:
    context-path: "/example-service"

spring:
  application:
    name: example-service
  profiles:
    active: dev
  datasource:
    # flyway使用这个参数，多数据源不需要配置此属性，支持oracle, mysql
    platform: mysql
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.223.129:3306/milepost_auth?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&serverTimezone=GMT%2B8
    username: root
    password: ENC(tXVsX2fiUQfrNM9Gqey3pmRiLgw+Znp/ISEaZCOMDo0=)
    # 连接池属性配置见https://github.com/brettwooldridge/HikariCP，以下几个是常用的
    hikari:
      connection-timeout: 30001
      idle-timeout: 600001
      max-lifetime: 1800001
      maximum-pool-size: 11
      minimum-idle: 11
    one:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://192.168.223.129:3306/milepost_auth_1?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&serverTimezone=GMT%2B8
      username: root
      password: ENC(tXVsX2fiUQfrNM9Gqey3pmRiLgw+Znp/ISEaZCOMDo0=)
      hikari:
        connection-timeout: 30002
        idle-timeout: 600002
        max-lifetime: 1800002
        maximum-pool-size: 12
        minimum-idle: 12
    two:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://192.168.223.129:3306/milepost_auth_2?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&serverTimezone=GMT%2B8
      username: root
      password: ENC(tXVsX2fiUQfrNM9Gqey3pmRiLgw+Znp/ISEaZCOMDo0=)
      hikari:
        connection-timeout: 30003
        idle-timeout: 600003
        max-lifetime: 1800003
        maximum-pool-size: 13
        minimum-idle: 13
  redis:
    jedis:
      pool:
        #配置连接池属性
        max-active: 20
        min-idle: 10
        max-idle: 20
        max-wait: 2000
    #配置redis服务器属性
    database: 1
    host: 192.168.223.129
    port: 6379
    #password: bomc
    #redis连接超时时间，单位毫秒
    timeout: 2000
  flyway:
    enabled: true
  activemq:
    broker-url: tcp://192.168.223.129:61616

eureka:
  client:
    service-url:
      #defaultZone: http://192.168.1.105:8761/eureka/
      defaultZone: http://192.168.223.129:8761/eureka/
  instance:
    ip-address: 192.168.223.1
    #${eureka.instance.ip-address}:${spring.application.name}:${server.port}
    #instance-id: xxx

#为了EurekaServer更灵敏而加的
#eureka.instance.lease-renewal-interval-in-seconds: 4
#eureka.instance.lease-expiration-duration-in-seconds: 7

#multiple-tenant:
#  tenant: abc
#  weight: 1
#  label-and: aa,bb
#  label-or: aa

#multiple-tenant:
#  tenant: abc
#  weight: 9
#  label-and: aa,bb

#multiple-tenant:
#  tenant: abc
#  weight: 0
#  label-and: aa,bb

multiple-tenant:
  tenant: tenant1
  weight: 9
  label-and: aa,bb
  label-or: dd,ee,ff


feign:
  client:
    config:
      default:
        readTimeout: 600000
        connectTimeout: 600000

conditional:
  rand:
    type: boolean
  demo:
    load: false
  property: properExists
  express: true

scheduler-lock:
  # 是否启用分布式调度锁，默认true，即启用，如不启用则不能使用@SchedulerLock、InstanceRoleService。
  enabled: true
  touch-heartbeat-interval-in-milliseconds: 15000
  heartbeat-expiration-duration-in-seconds: 45
synchronized-lock:
  # 是否启用分布式同步锁，默认true，即启用，如不启用则不能使用@SynchronizedLock。
  enabled: true
  # 分布式同步锁重试获取锁的间隔时间，即每隔多久重试一次是否有其他实例正占有锁，默认1000ms。
  retry-interval-in-milliseconds: 1000
  # 每一个实例能占有锁的最长时间，默认45s
  hold-duration-in-seconds: 45
thread-pool:
  core-pool-size: 3
  max-pool-size: 5
  queue-capacity: 1
  keep-alive-seconds: 600

tx-lcn:
  client:
    manager-address: 192.168.223.129:8070




